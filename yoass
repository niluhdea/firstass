module First where

import Data.List

x = 2

fst' (a, b) = a

snd' (a, b) = b

take' 0 a = []
take' a [] = []
take' a (x:xs) = x : take' (pred a) xs

--- take 2 [1,2,3] = 1
--- take 1 [2,3] 2
--- take 0 [3] = []

drop' 0 a = a
drop' a [] = []
drop' a (x:xs) = drop' (a-1) xs

--- drop 2 [1,2,3,4,5] = [2,3,4,5]
--- drop 1 [2,3,4,5] = [3,4,5]
--- drop 0 [3,4,5] = [3,4,5]

null' [] = True
null' a = False

max' a b
  | a >= b = a

min' a b
  | a <= b = a

length' [] = 0
length' (x:xs) = 1 + length' xs

--- length' [1,2,3] = 3
--- length' [2,3] = 2
--- length' [3] = 1
--- length' [] = 0

head' (x:xs) = x

tail' (x:xs) = xs

last' [x] = x
last' (x:xs) = last' xs

reverse' [] = []
reverse' (x:xs) = reverse' xs ++ [x]


--- reverse' [1,2,3,4] = 4,
